networks:
  net5g-notSIM:
    driver: bridge
    ipam:
      config:
        - subnet: 172.19.0.0/24
          gateway: 172.19.0.1

services:
  amf-notsim:
    build: ../amf
    container_name: amf-notsim
    command: ["/usr/local/bin/amf", "--cfg", "/app/config.yaml"]
    volumes:
      - ../configs_files/docker_compose_config_notsim/amfcfg.yaml:/app/config.yaml
      - ./certs/amf.crt:/var/run/certs/amf.crt:ro
      - ./certs/amf.key:/var/run/certs/amf.key:ro
      - ./certs/tls.crt:/var/run/certs/tls.crt:ro
      - ./certs/tls.key:/var/run/certs/tls.key:ro
      - ./certs/ca.crt:/var/run/certs/ca.crt:ro
    ports:
      - "8001:8000"
    networks:
      net5g-notSIM:
        ipv4_address: 172.19.0.10
    depends_on:
      - mongodb
      - nrf

  ausf-notsim:
    build: ../ausf
    container_name: ausf-notsim
    command: ["/usr/local/bin/ausf", "--cfg", "/app/config.yaml"]
    volumes:
      - ../configs_files/docker_compose_config_notsim/ausfcfg.yaml:/app/config.yaml
      - ./certs/ausf.crt:/var/run/certs/ausf.crt:ro
      - ./certs/ausf.key:/var/run/certs/ausf.key:ro
      - ./certs/tls.crt:/var/run/certs/tls.crt:ro
      - ./certs/tls.key:/var/run/certs/tls.key:ro
      - ./certs/ca.crt:/var/run/certs/ca.crt:ro
    ports:
      - "8002:8000"
    networks:
      net5g-notSIM:
        ipv4_address: 172.19.0.11
    depends_on:
      - mongodb
      - nrf

  nrf-notsim:
    build: ../nrf
    container_name: nrf-notsim
    command: ["/usr/local/bin/nrf", "--cfg", "/app/config.yaml"]
    volumes:
      - ../configs_files/docker_compose_config_notsim/nrfcfg.yaml:/app/config.yaml
      - ./certs/nrf.crt:/var/run/certs/nrf.crt:ro
      - ./certs/nrf.key:/var/run/certs/nrf.key:ro
      - ./certs/tls.crt:/var/run/certs/tls.crt:ro
      - ./certs/tls.key:/var/run/certs/tls.key:ro
      - ./certs/ca.crt:/var/run/certs/ca.crt:ro
    ports:
      - "8003:8000"
    networks:
      net5g-notSIM:
        ipv4_address: 172.19.0.12
    depends_on:
      - mongodb

  nssf-notsim:
    build: ../nssf
    container_name: nssf-notsim
    command: ["/usr/local/bin/nssf", "--cfg", "/app/config.yaml"]
    volumes:
      - ../configs_files/docker_compose_config_notsim/test_nssf_config.yaml:/app/config.yaml
      - ./certs/nssf.crt:/var/run/certs/nssf.crt:ro
      - ./certs/nssf.key:/var/run/certs/nssf.key:ro
      - ./certs/tls.crt:/var/run/certs/tls.crt:ro
      - ./certs/tls.key:/var/run/certs/tls.key:ro
      - ./certs/ca.crt:/var/run/certs/ca.crt:ro
    ports:
      - "8004:8000"
    networks:
      net5g-notSIM:
        ipv4_address: 172.19.0.13
    depends_on:
      - mongodb
      - nrf

  pcf-notsim:
    build: ../pcf
    container_name: pcf-notsim
    command: ["/usr/local/bin/pcf", "--cfg", "/app/config.yaml"]
    volumes:
      - ../configs_files/docker_compose_config_notsim/pcfcfg.yaml:/app/config.yaml
      - ./certs/pcf.crt:/var/run/certs/pcf.crt:ro
      - ./certs/pcf.key:/var/run/certs/pcf.key:ro
      - ./certs/tls.crt:/var/run/certs/tls.crt:ro
      - ./certs/tls.key:/var/run/certs/tls.key:ro
      - ./certs/ca.crt:/var/run/certs/ca.crt:ro
    ports:
      - "8005:8000"
    networks:
      net5g-notSIM:
        ipv4_address: 172.19.0.14
    depends_on:
      - mongodb
      - nrf

  smf-notsim:
    build: ../smf
    container_name: smf-notsim
    command: ["/usr/local/bin/smf", "--cfg", "/app/config.yaml", "-uerouting", "/app/uerouting.yaml"]
    volumes:
      - ../configs_files/docker_compose_config_notsim/smfcfg.yaml:/app/config.yaml
      - ../configs_files/docker_compose_config_notsim/uerouting.yaml:/app/uerouting.yaml
      - ./certs/smf.crt:/var/run/certs/smf.crt:ro
      - ./certs/smf.key:/var/run/certs/smf.key:ro
      - ./certs/tls.crt:/var/run/certs/tls.crt:ro
      - ./certs/tls.key:/var/run/certs/tls.key:ro
      - ./certs/ca.crt:/var/run/certs/ca.crt:ro
    ports:
      - "8006:8000"
    networks:
      net5g-notSIM:
        ipv4_address: 172.19.0.15
    depends_on:
      - mongodb
      - nrf

  upfadapter-notsim:
    build: ../upfadapter
    container_name: upf-adapter-notsim
    command: ["/usr/local/bin/upfadapter"]
    volumes:
      - ../configs_files/docker_compose_config_notsim/upfadapter.yaml:/app/config.yaml
      - ./certs/upfadapter.crt:/var/run/certs/upfadapter.crt:ro
      - ./certs/upfadapter.key:/var/run/certs/upfadapter.key:ro
      - ./certs/tls.crt:/var/run/certs/tls.crt:ro
      - ./certs/tls.key:/var/run/certs/tls.key:ro
      - ./certs/ca.crt:/var/run/certs/ca.crt:ro
    ports:
      - "8009:8090"
    networks:
      net5g-notSIM:
        ipv4_address: 172.19.0.21

  udm-notsim:
    build: ../udm
    container_name: udm-notsim
    command: ["/usr/local/bin/udm", "--cfg", "/app/config.yaml"]
    volumes:
      - ../configs_files/docker_compose_config_notsim/udmcfg.yaml:/app/config.yaml
      - ./certs/udm.crt:/var/run/certs/udm.crt:ro
      - ./certs/udm.key:/var/run/certs/udm.key:ro
      - ./certs/tls.crt:/var/run/certs/tls.crt:ro
      - ./certs/tls.key:/var/run/certs/tls.key:ro
      - ./certs/ca.crt:/var/run/certs/ca.crt:ro
    ports:
      - "8007:8000"
    networks:
      net5g-notSIM:
        ipv4_address: 172.19.0.16
    depends_on:
      - mongodb
      - nrf

  udr-notsim:
    build: ../udr
    container_name: udr-notsim
    command: ["/usr/local/bin/udr", "--cfg", "/app/config.yaml"]
    volumes:
      - ../configs_files/docker_compose_config_notsim/udr_config.yaml:/app/config.yaml
      - ./certs/udr.crt:/var/run/certs/udr.crt:ro
      - ./certs/udr.key:/var/run/certs/udr.key:ro
      - ./certs/tls.crt:/var/run/certs/tls.crt:ro
      - ./certs/tls.key:/var/run/certs/tls.key:ro
      - ./certs/ca.crt:/var/run/certs/ca.crt:ro
    ports:
      - "8008:8000"
    networks:
      net5g-notSIM:
        ipv4_address: 172.19.0.17
    depends_on:
      - mongodb
      - nrf

  webui-notsim:
    build: ../webconsole
    container_name: webui-notsim
    command: ["/usr/local/bin/webconsole-ui", "--cfg", "/app/config.yaml"]
    volumes:
      - ../configs_files/docker_compose_config_notsim/webuicfg.yaml:/app/config.yaml
      - ./certs/webui.crt:/var/run/certs/webui.crt:ro
      - ./certs/webui.key:/var/run/certs/webui.key:ro
      - ./certs/tls.crt:/var/run/certs/tls.crt:ro
      - ./certs/tls.key:/var/run/certs/tls.key:ro
      - ./certs/ca.crt:/var/run/certs/ca.crt:ro
    ports:
      - "5000:5000"
      - "5001:5001"
    networks:
      net5g-notSIM:
        ipv4_address: 172.19.0.18
    depends_on:
      - mongodb

  sctplb-notsim:
    build: ../sctplb
    container_name: sctplb-notsim
    command: ["/usr/local/bin/sctplb", "--cfg", "/app/config.yaml"]
    volumes:
      - ../configs_files/docker_compose_config_notsim/sctplb.yaml:/app/config.yaml
    networks:
      net5g-notSIM:
        ipv4_address: 172.19.0.19
  
  gnbsim-notsim:
    build: ../gnbsim
    container_name: gnbsim-notsim
    command: ["/usr/local/bin/gnbsim", "--cfg", "/app/config.yaml"]
    volumes:
      - ../configs_files/docker_compose_config_notsim/gnbsim.yaml:/app/config.yaml
    ports:
      - "8083:8080"
    networks:
      - net5g-notSIM
    depends_on:
      - sctplb

  nettools-notsim:
    image: nicolaka/netshoot:latest
    container_name: nettools-notsim
    command: ["/bin/sh", "-c", "while true; do sleep 3600; done"]
    networks:
      net5g-notSIM:
        ipv4_address: 172.19.0.22
    # Herramientas de red para testeo interno

  mongodb-notsim:
    image: mongo:latest
    container_name: mongodb-notsim
    restart: unless-stopped
    command: ["mongod", "--replSet", "rs0", "--bind_ip_all"]
    ports:
      - "27017:27017"
    volumes:
      - ./mongo_data:/data/db
      - ./certs/mongodb.crt:/var/run/certs/mongodb.crt:ro
      - ./certs/mongodb.key:/var/run/certs/mongodb.key:ro
      - ./certs/tls.crt:/var/run/certs/tls.crt:ro
      - ./certs/tls.key:/var/run/certs/tls.key:ro
      - ./certs/ca.crt:/var/run/certs/ca.crt:ro
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
    environment:
      MONGO_INITDB_DATABASE: admin
    networks:
      net5g-notSIM:
        ipv4_address: 172.19.0.30

  mongo-setup-notsim:
    image: mongo:latest
    container_name: mongo-setup-notsim
    depends_on:
      - mongodb
    volumes:
      - ./mongo-setup.sh:/mongo-setup.sh
    entrypoint: ["bash", "/mongo-setup.sh"]
    networks:
      net5g-notSIM:
        ipv4_address: 172.19.0.31

  kafka-notsim:
    image: bitnami/kafka:latest
    container_name: kafka-notsim
    restart: unless-stopped
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_CFG_PROCESS_ROLES: broker
      KAFKA_CFG_NODE_ID: 1
    volumes:
      - kafka_data:/bitnami/kafka
    ports:
      - "9092:9092"
    networks:
      net5g-notSIM:
        ipv4_address: 172.19.0.40
    depends_on:
      - zookeeper

  zookeeper-notsim:
    image: bitnami/zookeeper:latest
    container_name: zookeeper-notsim
    restart: unless-stopped
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
    ports:
      - "2181:2181"
    networks:
      net5g-notSIM:
        ipv4_address: 172.19.0.41

  mongo-express-notsim:
    image: mongo-express:latest
    container_name: mongo-express-notsim
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin123
      ME_CONFIG_MONGODB_ENABLE_ADMIN: "true"
      ME_CONFIG_MONGODB_AUTH_DATABASE: admin
    depends_on:
      - mongodb
      - mongo-setup
    networks:
      net5g-notSIM:
        ipv4_address: 172.19.0.32
volumes:
  kafka_data-notsim:
